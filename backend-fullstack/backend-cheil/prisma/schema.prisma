// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id         Int      @id @default(autoincrement())
  email      String   @unique @db.VarChar(100)
  password   String   @db.VarChar(255)
  nombre     String?  @db.VarChar(100)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("usuarios")
}

model Categoria {
  id         Int        @id @default(autoincrement())
  nombre     String     @unique @db.VarChar(100)
  descripcion String?   @db.Text
  productos  Producto[] // Relaci√≥n uno a muchos
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")

  @@map("categorias")
}

model Producto {
  id          Int       @id @default(autoincrement())
  nombre      String    @unique @db.VarChar(100)
  descripcion String?   @db.Text
  precio      Decimal   @db.Decimal(10, 2)
  categoria   Categoria @relation(fields: [categoriaId], references: [id], onDelete: Cascade)
  categoriaId Int       @map("categoria_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("productos")
}